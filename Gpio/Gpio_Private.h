#ifndef GPIO_PRIVATE_H
#define  GPIO_PRIVATE_H

#define REG32(BASE_ADDR, OFFSET)  (*(volatile uint32 *)((BASE_ADDR) + (OFFSET)))
//  register of GPIOB
#define GPIOA_BASE_ADDRESS   0x40020000
#define GPIOA_MODER     REG32(GPIOA_BASE_ADDRESS, 0x00)
#define GPIOA_OTYPER    REG32(GPIOA_BASE_ADDRESS, 0x04)
#define GPIOA_PUPDR     REG32(GPIOA_BASE_ADDRESS, 0x0C)
#define GPIOA_ODR       REG32(GPIOA_BASE_ADDRESS, 0x14)
#define GPIOA_IDR       REG32(GPIOA_BASE_ADDRESS, 0x10)


//  register of GPIOB
#define GPIOB_BASE_ADDRESS   0x40020400
#define GPIOB_MODER     REG32(GPIOB_BASE_ADDRESS, 0x00)
#define GPIOB_OTYPER    REG32(GPIOB_BASE_ADDRESS, 0x04)
#define GPIOB_PUPDR     REG32(GPIOB_BASE_ADDRESS, 0x0C)
#define GPIOB_ODR       REG32(GPIOB_BASE_ADDRESS, 0x14)
#define GPIOB_IDR       REG32(GPIOB_BASE_ADDRESS, 0x10)


//  register of GPIOC
#define GPIOC_BASE_ADDRESS   0x40020800
#define GPIOC_MODER     REG32(GPIOC_BASE_ADDRESS, 0x00)
#define GPIOC_OTYPER    REG32(GPIOC_BASE_ADDRESS, 0x04)
#define GPIOC_PUPDR     REG32(GPIOC_BASE_ADDRESS, 0x0C)
#define GPIOC_ODR       REG32(GPIOC_BASE_ADDRESS, 0x14)
#define GPIOC_IDR       REG32(GPIOC_BASE_ADDRESS, 0x10)

//  register of GPIOD
#define GPIOD_BASE_ADDRESS   0x40020800
#define GPIOD_MODER     REG32(GPIOD_BASE_ADDRESS, 0x00)
#define GPIOD_OTYPER    REG32(GPIOD_BASE_ADDRESS, 0x04)
#define GPIOD_PUPDR     REG32(GPIOD_BASE_ADDRESS, 0x0C)
#define GPIOD_ODR       REG32(GPIOD_BASE_ADDRESS, 0x14)
#define GPIOD_IDR       REG32(GPIOD_BASE_ADDRESS, 0x10)




#endif
